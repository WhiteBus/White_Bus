// Generated by view binder compiler. Do not edit!
package com.google.mediapipe.examples.facelandmarker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.mediapipe.examples.facelandmarker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserEndingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout addressBoard;

  @NonNull
  public final LinearLayout boardEnding;

  @NonNull
  public final ConstraintLayout endingBoard;

  @NonNull
  public final ImageView imageEndGuide;

  @NonNull
  public final TextView textEndGuide;

  @NonNull
  public final TextView userAddress;

  @NonNull
  public final TextView userAddressDstName;

  private ActivityUserEndingBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout addressBoard, @NonNull LinearLayout boardEnding,
      @NonNull ConstraintLayout endingBoard, @NonNull ImageView imageEndGuide,
      @NonNull TextView textEndGuide, @NonNull TextView userAddress,
      @NonNull TextView userAddressDstName) {
    this.rootView = rootView;
    this.addressBoard = addressBoard;
    this.boardEnding = boardEnding;
    this.endingBoard = endingBoard;
    this.imageEndGuide = imageEndGuide;
    this.textEndGuide = textEndGuide;
    this.userAddress = userAddress;
    this.userAddressDstName = userAddressDstName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserEndingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserEndingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_ending, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserEndingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_board;
      ConstraintLayout addressBoard = ViewBindings.findChildViewById(rootView, id);
      if (addressBoard == null) {
        break missingId;
      }

      id = R.id.board_ending;
      LinearLayout boardEnding = ViewBindings.findChildViewById(rootView, id);
      if (boardEnding == null) {
        break missingId;
      }

      id = R.id.ending_board;
      ConstraintLayout endingBoard = ViewBindings.findChildViewById(rootView, id);
      if (endingBoard == null) {
        break missingId;
      }

      id = R.id.image_end_guide;
      ImageView imageEndGuide = ViewBindings.findChildViewById(rootView, id);
      if (imageEndGuide == null) {
        break missingId;
      }

      id = R.id.text_end_guide;
      TextView textEndGuide = ViewBindings.findChildViewById(rootView, id);
      if (textEndGuide == null) {
        break missingId;
      }

      id = R.id.user_address;
      TextView userAddress = ViewBindings.findChildViewById(rootView, id);
      if (userAddress == null) {
        break missingId;
      }

      id = R.id.user_address_dst_name;
      TextView userAddressDstName = ViewBindings.findChildViewById(rootView, id);
      if (userAddressDstName == null) {
        break missingId;
      }

      return new ActivityUserEndingBinding((ConstraintLayout) rootView, addressBoard, boardEnding,
          endingBoard, imageEndGuide, textEndGuide, userAddress, userAddressDstName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
